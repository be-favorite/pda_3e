[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "스터디: Python for Data Analysis 3E",
    "section": "",
    "text": "서문\n웹에 배포되어 있는 Python for Data Analysis, 3E (McKinney 2022)를 공부한 흔적을 남기고자 합니다. 책의 모든 내용을 담진 않습니다. 개인적으로 기록하고 싶은 부분만 정리할 예정입니다.\n\n\n\n\nMcKinney, Wes. 2022. Python for Data Analysis, 3E. 3rd ed. O‘REILLY. https://wesmckinney.com/book/."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "McKinney, Wes. 2022. Python for Data Analysis, 3E. 3rd ed.\nO‘REILLY. https://wesmckinney.com/book/."
  },
  {
    "objectID": "chapter3.html",
    "href": "chapter3.html",
    "title": "Chapter 3",
    "section": "",
    "text": "반가워요"
  },
  {
    "objectID": "chapter3.html#tab-completion",
    "href": "chapter3.html#tab-completion",
    "title": "Chapter 3",
    "section": "Tab completion",
    "text": "Tab completion\n\n\n\nTab 키를 누르면 앞에 적어둔 네이밍에 매칭되는 객체, 함수 등을 찾아준다.\n\nan_apple = 27\nan_example = 42\n\n위 코드를 실행하고 an<Tab>을 시도 해볼 것. 특정 객체에 대해 .을 타이핑하고 Tab을 눌러보면, 해당 객체에 사용 가능한 메서드(method), 속성(attribute)1에 관한 자동완성도 제공해준다.\n\nb = [1, 2, 3]\n\nb.<Tab>을 시도해보도록 하자. list 객체에서 사용할 수 있는 메서드들을 제시해줄 것이다. 이는 모듈에서도 마찬가지 이다:\n\nimport datetime\n\n마찬가지로 datetime.<Tab>을 시도해보자."
  },
  {
    "objectID": "chapter2.html#introspection",
    "href": "chapter2.html#introspection",
    "title": "1  Chapter 2",
    "section": "1.2 Introspection",
    "text": "1.2 Introspection\n변수 뒤에 물음표(?)를 써보자. 해당 객체에 관한 일반적인 정보들을 제공해준다:\n\nb = [1, 2, 3]\nb?\nprint?\n\n이를 객체 검사(object introspection)이라 한다. 만약 객체가 함수나 인스턴스 메서드인 경우 docstring도 표시된다. 물론, docstring을 정의한 경우에 한해서 이다. 다음의 예시를 참고하자:\n\ndef add_numbers(a, b):\n    \"\"\"\n    Add two numbers together\n\n    Returns\n    -------\n    the_sum : type of arguments\n    \"\"\"\n    return a + b\n\n\nadd_numbers?"
  },
  {
    "objectID": "chapter2.html#tab-completion",
    "href": "chapter2.html#tab-completion",
    "title": "1  Chapter 2",
    "section": "1.1 Tab completion",
    "text": "1.1 Tab completion\nTab 키를 누르면 앞에 적어둔 네이밍에 매칭되는 객체, 함수 등을 찾아준다.\n\nan_apple = 27\nan_example = 42\n\n위 코드를 실행하고 an<Tab>을 시도 해볼 것. 특정 객체에 대해 .을 타이핑하고 Tab을 눌러보면, 해당 객체에 사용 가능한 메서드(method), 속성(attribute)1에 관한 자동완성도 제공해준다.\n\nb = [1, 2, 3]\n\nb.<Tab>을 시도해보도록 하자. list 객체에서 사용할 수 있는 메서드들을 제시해줄 것이다. 이는 모듈에서도 마찬가지 이다:\n\nimport datetime\n\n마찬가지로 datetime.<Tab>을 시도해보자. 9개의 메서드를 만날 수 있을 것이다."
  },
  {
    "objectID": "chapter2.html#dates-and-times",
    "href": "chapter2.html#dates-and-times",
    "title": "1  Chapter 2",
    "section": "1.3 Dates and times",
    "text": "1.3 Dates and times\nstrftime() : datetime 객체를 string으로 포맷팅 해주는 메서드\n\nfrom datetime import datetime, date, time\ndt = datetime(2011, 10, 29, 20, 30, 21)\ntype(dt)\ntype(dt.strftime(\"%Y-%m-%d %H:%M\"))\n\nstr\n\n\nstrptime(): string 객체를 datetime으로 포맷팅\n\ndatetime.strptime(\"20091031\", \"%Y%m%d\")\ntype(datetime.strptime(\"20091031\", \"%Y%m%d\"))\n\ndatetime.datetime"
  }
]