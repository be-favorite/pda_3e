# Chapter 3

## Data Structures and Sequences

### Tuple

변수를 꺼낼 때(unpacking) 흔히들 사용하는 방법은 튜플이나 리스트 시퀀스를 반복해주는 것:

```{python}
seq = [(1, 2, 3), (4, 5, 6), (7, 8, 9)]
for a, b, c in seq:
    print(f'a={a}, b={b}, c={c}')
```

튜플의 어떤 시작점으로부터 여러 요소를 한꺼번에 꺼내고 싶다면 `*rest`라는 구문을 사용해주면, 리스트 형태로 꺼내줌:

```{python}
values = 1, 2, 3, 4, 5
a, b, *rest = values
a
b
rest
```

요 `rest`는 여러 요소들을 버리고 싶을 때도 사용함. `rest`라는 이름에 딱히 특별한 의미는 없고, 파이썬 사용자들은 보통 언더스코어(`_`)를 활용(컨벤션이라고 보면됨)하여 원치않는 변수들을 제거함.

```{python}
a, b, *_ = values
a
b
```

튜플은 한 번 만들어지면 수정이 불가능한 객체이기 때문에, 인스턴스 메서드가 꽤 적다(light on). 특히 특정 값의 개수를 세는 `count` 유용하게 쓰인다. 물론 list에서도 사용 가능하다.

```{python}
a = (1, 2, 2, 2, 3, 4, 2)
a.count(2)
```

### List

리스트의 경우 특정 요소가 존재하는지 존재하지 않는지 체크하기 위해, `in`, `not in` 연산자를 사용할 수 있다. 그러나, 이 부분은 딕셔너리나 집합(set)에 비해 매우 느리다. Python에서는 리스트의 경우 해당 요소의 검색에 linear sacn을 사용하기 때문이다. 그에 반면 딕셔너리나 집합은 Hash table에 기반하여 체크하기 때문에 훨씬 빠르다. 참고하기 바란다.
